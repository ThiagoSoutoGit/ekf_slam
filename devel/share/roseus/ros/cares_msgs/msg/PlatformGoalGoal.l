;; Auto-generated. Do not edit!


(when (boundp 'cares_msgs::PlatformGoalGoal)
  (if (not (find-package "CARES_MSGS"))
    (make-package "CARES_MSGS"))
  (shadow 'PlatformGoalGoal (find-package "CARES_MSGS")))
(unless (find-package "CARES_MSGS::PLATFORMGOALGOAL")
  (make-package "CARES_MSGS::PLATFORMGOALGOAL"))

(in-package "ROS")
;;//! \htmlinclude PlatformGoalGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))
(if (not (find-package "STD_MSGS"))
  (ros::roseus-add-msgs "std_msgs"))


(intern "*STOP*" (find-package "CARES_MSGS::PLATFORMGOALGOAL"))
(shadow '*STOP* (find-package "CARES_MSGS::PLATFORMGOALGOAL"))
(defconstant cares_msgs::PlatformGoalGoal::*STOP* 0)
(intern "*MOVE*" (find-package "CARES_MSGS::PLATFORMGOALGOAL"))
(shadow '*MOVE* (find-package "CARES_MSGS::PLATFORMGOALGOAL"))
(defconstant cares_msgs::PlatformGoalGoal::*MOVE* 1)
(intern "*RESET*" (find-package "CARES_MSGS::PLATFORMGOALGOAL"))
(shadow '*RESET* (find-package "CARES_MSGS::PLATFORMGOALGOAL"))
(defconstant cares_msgs::PlatformGoalGoal::*RESET* 2)
(intern "*ACTUATE*" (find-package "CARES_MSGS::PLATFORMGOALGOAL"))
(shadow '*ACTUATE* (find-package "CARES_MSGS::PLATFORMGOALGOAL"))
(defconstant cares_msgs::PlatformGoalGoal::*ACTUATE* 3)

(defun cares_msgs::PlatformGoalGoal-to-symbol (const)
  (cond
        ((= const 0) 'cares_msgs::PlatformGoalGoal::*STOP*)
        ((= const 1) 'cares_msgs::PlatformGoalGoal::*MOVE*)
        ((= const 2) 'cares_msgs::PlatformGoalGoal::*RESET*)
        ((= const 3) 'cares_msgs::PlatformGoalGoal::*ACTUATE*)
        (t nil)))

(defclass cares_msgs::PlatformGoalGoal
  :super ros::object
  :slots (_target_pose _link_id _command ))

(defmethod cares_msgs::PlatformGoalGoal
  (:init
   (&key
    ((:target_pose __target_pose) (instance geometry_msgs::PoseStamped :init))
    ((:link_id __link_id) (instance std_msgs::String :init))
    ((:command __command) 0)
    )
   (send-super :init)
   (setq _target_pose __target_pose)
   (setq _link_id __link_id)
   (setq _command (round __command))
   self)
  (:target_pose
   (&rest __target_pose)
   (if (keywordp (car __target_pose))
       (send* _target_pose __target_pose)
     (progn
       (if __target_pose (setq _target_pose (car __target_pose)))
       _target_pose)))
  (:link_id
   (&rest __link_id)
   (if (keywordp (car __link_id))
       (send* _link_id __link_id)
     (progn
       (if __link_id (setq _link_id (car __link_id)))
       _link_id)))
  (:command
   (&optional __command)
   (if __command (setq _command __command)) _command)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PoseStamped _target_pose
    (send _target_pose :serialization-length)
    ;; std_msgs/String _link_id
    (send _link_id :serialization-length)
    ;; uint8 _command
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PoseStamped _target_pose
       (send _target_pose :serialize s)
     ;; std_msgs/String _link_id
       (send _link_id :serialize s)
     ;; uint8 _command
       (write-byte _command s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PoseStamped _target_pose
     (send _target_pose :deserialize buf ptr-) (incf ptr- (send _target_pose :serialization-length))
   ;; std_msgs/String _link_id
     (send _link_id :deserialize buf ptr-) (incf ptr- (send _link_id :serialization-length))
   ;; uint8 _command
     (setq _command (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;;
   self)
  )

(setf (get cares_msgs::PlatformGoalGoal :md5sum-) "77c63f6dc8fbd38f42f7e290bcee2595")
(setf (get cares_msgs::PlatformGoalGoal :datatype-) "cares_msgs/PlatformGoalGoal")
(setf (get cares_msgs::PlatformGoalGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition

# Desired pose - frame_id sets which world space to move in
geometry_msgs/PoseStamped target_pose

# End Effector ID to move to target_pose
std_msgs/String link_id

# Arm command
# Enumeration 0 - 255
uint8 STOP      = 0
uint8 MOVE      = 1
uint8 RESET     = 2
uint8 ACTUATE   = 3
uint8 command

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

================================================================================
MSG: std_msgs/String
string data

")



(provide :cares_msgs/PlatformGoalGoal "77c63f6dc8fbd38f42f7e290bcee2595")


